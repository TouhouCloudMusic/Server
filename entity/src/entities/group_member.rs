//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(
    Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize,
)]
#[sea_orm(table_name = "group_member")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub member_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub group_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::artist::Entity",
        from = "Column::GroupId",
        to = "super::artist::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Artist2,
    #[sea_orm(
        belongs_to = "super::artist::Entity",
        from = "Column::MemberId",
        to = "super::artist::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Artist1,
}

impl ActiveModelBehavior for ActiveModel {}
